name: Unit-tests on Linux CPU

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

env:
  CHANNEL: "nightly"

jobs:
  tests:
    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.12xlarge
      repository: pytorch/rl
      script: |
        ## setup_env.sh
        # Avoid error: "fatal: unsafe repository"
        git config --global --add safe.directory '*'

        script_dir=".circleci/unittest/linux/scripts"
        root_dir="$GITHUB_WORKSPACE"
        conda_dir="${root_dir}/conda"
        env_dir="${root_dir}/env"
        lib_dir="${env_dir}/lib"

        # 1. Install conda at ./conda
        if [ ! -d "${conda_dir}" ]; then
            printf "* Installing conda\n"
            wget -O miniconda.sh "http://repo.continuum.io/miniconda/Miniconda3-latest-linux-x86_64.sh"
            bash ./miniconda.sh -b -f -p "${conda_dir}"
        fi
        eval "$(${conda_dir}/bin/conda shell.bash hook)"

        # 2. Create test environment at ./env
        printf "python: ${PYTHON_VERSION}\n"
        if [ ! -d "${env_dir}" ]; then
            printf "* Creating a test environment\n"
            conda create --prefix "${env_dir}" -y python="$PYTHON_VERSION"
        fi

        conda activate "${env_dir}"

        # 3. Install mujoco
        printf "* Installing mujoco and related\n"
        mkdir -p $root_dir/.mujoco
        cd $root_dir/.mujoco/
        wget https://github.com/deepmind/mujoco/releases/download/2.1.1/mujoco-2.1.1-linux-x86_64.tar.gz
        tar -xf mujoco-2.1.1-linux-x86_64.tar.gz
        wget https://mujoco.org/download/mujoco210-linux-x86_64.tar.gz
        tar -xf mujoco210-linux-x86_64.tar.gz
        cd $script_dir

        # 4. Install Conda dependencies
        printf "* Installing dependencies (except PyTorch)\n"
        echo "  - python=${PYTHON_VERSION}" >> "${script_dir}/environment.yml"
        cat "${script_dir}/environment.yml"

        PRIVATE_MUJOCO_GL=osmesa

        export MUJOCO_GL=$PRIVATE_MUJOCO_GL
        conda env config vars set MUJOCO_PY_MUJOCO_PATH=$root_dir/.mujoco/mujoco210 \
          DISPLAY=unix:0.0 \
          MJLIB_PATH=$root_dir/.mujoco/mujoco-2.1.1/lib/libmujoco.so.2.1.1 \
          LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$root_dir/.mujoco/mujoco210/bin \
          SDL_VIDEODRIVER=dummy \
          MUJOCO_GL=$PRIVATE_MUJOCO_GL \
          PYOPENGL_PLATFORM=$PRIVATE_MUJOCO_GL

        pip install pip --upgrade

        conda env update --file "${script_dir}/environment.yml" --prune

        ## install.sh
        # Install PyTorch, TorchRL, and testing libraries
        set -ex
        unset PYTORCH_VERSION
        eval "$(./conda/bin/conda shell.bash hook)"
        conda activate ./env
        
        pip3 install \
            --pre torch torchvision torchaudio \
            --extra-index-url https://download.pytorch.org/whl/nightly/cpu
        # smoke test
        python -c "import functorch"

        # install snapshot
        pip install git+https://github.com/pytorch/torchsnapshot

        # install tensordict
        pip install git+https://github.com/pytorch-labs/tensordict.git
        python3 setup.py develop
        
        ## run_test.sh
        export PYTORCH_TEST_WITH_SLOW='1'
        python -m torch.utils.collect_env

        # solves ImportError: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$lib_dir
        export MKL_THREADING_LAYER=GNU

        coverage run -m pytest test/smoke_test.py -v --durations 20
        coverage run -m pytest test/smoke_test_deps.py -v --durations 20 -k 'test_gym or test_dm_control_pixels or test_dm_control or test_tb'
        coverage run -m pytest --instafail -v --durations 20
        coverage xml -i

        ## post_process.sh
        # nothing that hasn't already been done